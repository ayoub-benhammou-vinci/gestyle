@baseUrl = http://localhost:3000

### 1.1 Successful registration
POST {{baseUrl}}/auths/register
Content-Type: application/json

{
  "civility": "MISTER",
  "pseudo": "user1",
  "email": "user1@gmail.com",
  "password": "password123"
}

### 1.2 Email already used (should return 409 Conflict)
POST {{baseUrl}}/auths/register
Content-Type: application/json

{
  "civility": "MADAM",
  "pseudo": "user2",
  "email": "user1@gmail.com",
  "password": "password456"
}

### 1.3 Missing pseudo field (should return 400 Bad Request)
POST {{baseUrl}}/auths/register
Content-Type: application/json

{
  "civility": "MISTER",
  "email": "user5@gmail.com",
  "password": "password123"
}

### 1.4 Missing email field (should return 400 Bad Request)
POST {{baseUrl}}/auths/register
Content-Type: application/json

{
  "civility": "OTHER",
  "pseudo": "user6",
  "password": "password123"
}

### 1.5 Invalid sexe value (should return 400 Bad Request)
POST {{baseUrl}}/auths/register
Content-Type: application/json

{
  "civility": "Hello",
  "pseudo": "user7",
  "email": "user7@gmail.com",
  "password": "password123"
}

### 1.6 Login successful
POST {{baseUrl}}/auths/login
Content-Type: application/json

{
  "email": "user1@gmail.com",
  "password": "password123"
}
> {% client.global.set("userToken", response.body.token) %}

### 1.7 Login with wrong password (should return 401 Unauthorized)
POST {{baseUrl}}/auths/login
Content-Type: application/json

{
  "email": "user1@gmail.com",
  "password": "password134"
}

